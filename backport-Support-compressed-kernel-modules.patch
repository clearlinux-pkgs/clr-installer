From d4c2c23faf4c4bb0326bca92f44592215e75251d Mon Sep 17 00:00:00 2001
From: "Brett T. Warden" <brett.t.warden@intel.com>
Date: Mon, 24 Jun 2024 14:16:00 -0700
Subject: [PATCH 1/3] Support compressed kernel modules

When generating an ISO image, we have a fixed list of kernel modules
that should be included. Add logic to determine whether those kernel
modules are named '*.ko.zst', '*.ko.gz', or '*.ko.xz' instead of only
'*.ko'.
---
 isoutils/isoutils.go | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/isoutils/isoutils.go b/isoutils/isoutils.go
index 801c1ae5c5c7..a91f3f3c71cf 100644
--- a/isoutils/isoutils.go
+++ b/isoutils/isoutils.go
@@ -194,6 +194,13 @@ func mkInitrdInitScript(templatePath string) error {
 		"/kernel/fs/overlayfs/overlay.ko",
 	}
 
+	//Compression extensions
+	compressionExtensions := []string{
+		".zst",
+		".gz",
+		".xz",
+	}
+
 	/* Find kernel, then break the name into kernelVersion */
 	kernelGlob, err := filepath.Glob(tmpPaths[clrRootfs] + "/lib/kernel/org.clearlinux.*")
 	if err != nil || len(kernelGlob) != 1 {
@@ -209,6 +216,15 @@ func mkInitrdInitScript(templatePath string) error {
 	for _, i := range modules {
 		rootfsModPath := tmpPaths[clrRootfs] + "/usr/lib/modules/" + kernelVersion + "." + kernelType + i
 
+		/* check for compression extensions on module filenames */
+		for _, ext := range compressionExtensions {
+			if _, err := os.Stat(rootfsModPath + ext); err == nil {
+				rootfsModPath = rootfsModPath + ext
+				i = i + ext
+				break
+			}
+		}
+
 		/* copy kernel module to initramfs */
 		initrdModPath := filepath.Dir(tmpPaths[clrInitrd] + "/usr/lib/modules/" + kernelVersion + "." + kernelType + i)
 
-- 
2.45.2

